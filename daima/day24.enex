<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20200805T121609Z" application="Evernote/Windows" version="6.x">
<note><title>day24</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note><div>swiper文档查阅及使用<br/></div><div><br/></div><div>&nbsp; &nbsp; 基本使用及案例... ...</div><div><br/></div><div><br/></div><div>bootstrap文档查阅及使用</div><div><br/></div><div>&nbsp; &nbsp;&nbsp;基本使用及案例... ...</div><div><br/></div><div><br/></div><div><br/></div><div><span style="font-size: 16pt; color: rgb(227, 0, 0); font-weight: bold;">RequireJs</span></div><div><br/></div><div><span style="font-size: 14pt; font-weight: bold;">什么是RequireJs</span></div><div><span style="font-size: 14pt;">RequireJS是一个非常小巧的JavaScript模块载入框架，是AMD规范最好的实现者之一。</span></div><div><br/></div><div><span style="font-size: 14pt;">AMD即Asynchronous Module Definition（异步模块定义）。</span></div><div><span style="font-size: 14pt;">AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。</span></div><div><br/></div><div><span style="font-size: 14pt;">CMD即Common Moudle Definition（通用模块定义）。</span></div><div><span style="font-size: 14pt;">CMD 是 SeaJS 在推广过程中对模块定义的规范化产出。</span></div><div><br/></div><div><span style="font-size: 14pt;">AMD和CMD相同点：</span></div><div><br/></div><div><span style="font-size: 14pt;">都是异步加载模块；</span></div><div><span style="font-size: 14pt;">都实现了浏览器端模块化开发的目的；</span></div><div><span style="font-size: 14pt;">都倡导模块化开发理念，使前端模块化开发变得简单自然；</span></div><div><span style="font-size: 14pt;">解决前端开发过程中的两大问题：</span></div><div><span style="font-size: 14pt;">1.文件之间的依赖问题；</span></div><div><span style="font-size: 14pt;">2.浏览器加载多个JS文件时页面失去响应的时间过长。</span></div><div>&nbsp;</div><div><span style="font-size: 14pt;">AMD和CMD不同点：</span></div><div><br/></div><div><span style="font-size: 14pt;">1.官方推荐的写法不同，AMD推崇依赖前置，CMD推崇依赖就近；</span></div><div><span style="font-size: 14pt;">2.模块的执行时机不同，AMD是提前执行，CMD是延迟执行；</span></div><div><span style="font-size: 14pt;">3.api的设计不同，AMD 的 API 默认是一个当多个用，CMD 的 API 严格区分，推崇职责单一。</span></div><div><br/></div><div><br/></div><div><span style="font-size: 14pt; font-weight: bold;">为什么使用RequireJS</span></div><div><br/></div><div><span style="font-size: 14pt;">随着网站功能逐渐丰富，网页中的js也变得越来越复杂和臃肿，原有通过script标签来导入一个个的js文件这种方式已经不能满足现在互联网开发模式，我们需要团队协作、模块复用、单元测试等等一系列复杂的需求。</span></div><div><br/></div><div><span style="font-size: 14pt;">模块化：模块化就是将不同功能的函数封装起来，并提供使用接口，他们彼此之间互不影响。</span></div><div><span style="font-size: 14pt;">RequireJS，会在相关的js加载后执行回调函数，这个过程是异步的，所以可以防止js加载阻塞页面渲染。</span></div><div><span style="font-size: 14pt;">使用程序调用的方式加载js，防出现如下丑陋的场景：</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;a.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;b.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;c.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;d.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;e.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;f.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;g.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;h.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;w.js&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script type=&quot;text/javascript&quot; src=&quot;m.js&quot;&gt;&lt;/script&gt;</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0); font-weight: bold;">&quot;一个模块就是一个文件&quot;</span></div><div><br/></div><div><span style="font-size: 14pt; font-weight: bold;">require 用来加载依赖模块，并执行加载完后的回调函数</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">require([&apos;moduleA&apos;, &apos;moduleB&apos;], function (a, b){</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp; &nbsp; //&nbsp;...</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">});</span></div><div><span style="font-size: 14pt;">第一个参数是依赖模块列表，第二个参数是一个callback函数</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">require.config({</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp; &nbsp;</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">baseUrl: &apos;js/lib&apos;,</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;paths : {</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;jquery&quot; : [&quot;</span><a href="http://libs.baidu.com/jquery/2.0.3/jquery" style="font-size: 14pt; color: rgb(45, 79, 201);">http://libs.baidu.com/jquery/2.0.3/jquery</a><span style="font-size: 14pt; color: rgb(45, 79, 201);">&quot;,&quot;</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">jquery-2.1.4.min</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">&quot;],</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;mytask&quot; : &quot;myTask&quot;&nbsp;&nbsp;&nbsp;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">})</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">require([&quot;jquery&quot;,&quot;</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">mytask</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">&quot;],function($,</span> <span style="font-size: 14pt; color: rgb(45, 79, 201);">mytask</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">){</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;$(function(){</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">mytask</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">(&quot;load finished&quot;);</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;})</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">})</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(227, 0, 0);">require.config</span><span style="font-size: 14pt;">是用来配置模块加载位置，简单点说就是</span><span style="font-size: 14pt; color: rgb(227, 0, 0); font-weight: bold;">引入模块并起一个别名</span></div><div><span style="font-size: 14pt;">比如将百度的jquery库地址标记为jquery，这样在require时只需要写[&quot;jquery&quot;]就可以加载该js</span></div><div><span style="font-size: 14pt;">本地的js模块我们也可以这样配置</span></div><div><br/></div><div><span style="font-size: 14pt; font-weight: bold;">全局配置</span></div><div><span style="font-size: 14pt;">上面的例子中重复出现了require.config配置，如果每个页面中都加入配置，必然显得十分不雅，requirejs提供了一种叫&quot;主数据&quot;的功能，我们首先创建一个main.js：</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">require.config({</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;baseUrl: &apos;js/lib&apos;,</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;paths : {</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;jquery&quot; : [&quot;</span><a href="http://libs.baidu.com/jquery/2.0.3/jquery" style="font-size: 14pt; color: rgb(45, 79, 201);">http://libs.baidu.com/jquery/2.0.3/jquery&quot;,&quot;jquery-2.1.4.min</a><span style="font-size: 14pt; color: rgb(45, 79, 201);">&quot;],</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;mytask&quot; : &quot;myTask&quot;&nbsp;&nbsp;&nbsp;</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">})</span></div><div><br/></div><div><span style="font-size: 14pt;">然后在页面中使用下面的方式来使用requirejs：</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">&lt;script src=&quot;js/require.js&quot;</span> <span style="font-size: 14pt; color: rgb(227, 0, 0);">data-main</span><span style="font-size: 14pt; color: rgb(45, 79, 201);">=&quot;js/main&quot;&gt;&lt;/script&gt;</span></div><div><span style="font-size: 14pt;">加载 requirejs 的 script 标签加入了data-main属性</span><span style="font-size: 14pt; color: rgb(227, 0, 0);">(设置入口文件)</span><span style="font-size: 14pt;">，这个属性指定的 js 将在 require.js 加载完成后处理，我们把require.config的配置加入到data-main后，就可以使每一个页面都使用这个配置，然后页面中就可以直接使用require来加载所有的短模块名。</span></div><div><br/></div><div><br/></div><div><span style="font-size: 14pt; font-weight: bold;">define 用来定义一个模块</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">define({</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　&nbsp;</span><span style="font-size: 14pt; color: rgb(168, 168, 168);">// ...</span></div><div><span style="font-size: 14pt; color: rgb(168, 168, 168);">&nbsp; &nbsp; key: value</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">});</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">define(function( ){</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　&nbsp;</span><span style="font-size: 14pt; color: rgb(168, 168, 168);">// ...</span></div><div><span style="font-size: 14pt; color: rgb(168, 168, 168);">&nbsp; &nbsp; return {</span></div><div><span style="font-size: 14pt; color: rgb(168, 168, 168);">&nbsp;&nbsp; &nbsp;&nbsp; &nbsp; // ...</span></div><div><span style="font-size: 14pt; color: rgb(168, 168, 168);">&nbsp;&nbsp; &nbsp;}</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">});</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">define([&apos;依赖的模块路径&apos;], function(依赖模块名称){</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　</span><span style="font-size: 14pt; color: rgb(168, 168, 168);">// ...</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　return {</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　　</span><span style="font-size: 14pt; color: rgb(168, 168, 168);">// ...</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　};</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">});</span></div><div><br/></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">define(&apos;模块名称&apos;, [&apos;依赖的模块路径&apos;], function(依赖模块名称){</span><span style="font-size: 14pt; color: rgb(168, 168, 168);">// 官方不推荐</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　</span><span style="font-size: 14pt; color: rgb(168, 168, 168);">// ...</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　return {</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　　</span><span style="font-size: 14pt; color: rgb(168, 168, 168);">// ...</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">　};</span></div><div><span style="font-size: 14pt; color: rgb(45, 79, 201);">});</span></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></en-note>]]></content><created>20190824T054818Z</created><updated>20200805T121601Z</updated><note-attributes><author>陶舒健</author><source>desktop.win</source><source-application>yinxiang.win32</source-application></note-attributes></note></en-export>
